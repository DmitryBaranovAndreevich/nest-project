server {
    listen 80;
    listen [::]:80;
    server_name mesto.baranov.nomoredomains.work;
    server_tokens off;
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    location / {
        return 301 https://mesto.baranov.nomoredomains.work$request_uri;
    }
}
server {
    listen 443 default_server ssl http2;
    listen [::]:443 ssl http2;
    server_name mesto.baranov.nomoredomains.work;
    # ssl_certificate /etc/nginx/ssl/live/mesto.baranov.nomoredomains.work/fullchain.pem;
    # ssl_certificate_key /etc/nginx/ssl/live/mesto.baranov.nomoredomains.work/privkey.pem;
    location / {
    	root   /home/user-admin/current/frontend/public;
    }
}


# Certificate is saved at: /etc/letsencrypt/live/api.mesto.baranov.nomoredomains.work/fullchain.pem
# Key is saved at:         /etc/letsencrypt/live/api.mesto.baranov.nomoredomains.work/privkey.pem

# server {
#     listen 80;
#     listen [::]:80;
#     server_name mesto.baranov.nomoredomains.work;
#     server_tokens off;
#     location /.well-known/acme-challenge/ {
#         root /var/www/certbot;
#     }
#     location / {
#         return 301 https://mesto.baranov.nomoredomains.work$request_uri;
#     }
# }



# server {
#     listen 80;

#     server_name  http://mesto.baranov.nomoredomains.work;


#      location /.well-known/acme-challenge/ {
#         root /var/www/certbot;
#     }

#     location / {
#         return 301 https://mesto.baranov.nomoredomains.work$request_uri;
#     }
# }

# server {
#     listen  3010;
#     server_name  mesto.baranov.nomoredomains.work;

#     root   /usr/share/nginx/html;

#     location / {
#         try_files $uri $uri/ /index.html;
#     }
# }

# server {
#         listen 80;

#         server_name api.mesto.baranov.nomoredomains.work;

#         location / {
#                 proxy_pass http://backend:3000;
#                 proxy_http_version 1.1;
#                 proxy_set_header Upgrade $http_upgrade;
#                 proxy_set_header Connection 'upgrade';
#                 proxy_set_header Host $host;
#                 proxy_cache_bypass $http_upgrade;
#         }
# }